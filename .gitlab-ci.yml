image: node:latest
services:
  - docker:dind

stages:
  - prebuild
  - build
  - test
  - dockerize
  - deploy

variables:
  DOCKER_DRIVER: overlay
  GITLAB_CONTAINER: registry.gitlab.com/cache-me-outside/textbook-exchange-frontend
  CONTAINER_TAG: latest
  HEROKU_CONTAINER: registry.heroku.com/uofi-book-exchange/web
  HEROKU_USER: alanrgan@gmail.com

prebuild:
  stage: prebuild
  script:
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update && sudo apt-get install yarn
    - yarn install
  artifacts:
    paths:
      - node_modules
  cache:
    paths:
      - node_modules

build:react:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - build

test:react:
  stage: test
  script:
    - npm run test

deploy:heroku:
  image: docker:latest
  stage: deploy
  environment:
    name: prod
    url: https://uofi-book-exchange.herokuapp.com/
  before_script:
    - apk add --no-cache curl
  script:
    - docker build -f Dockerfile --iidfile imageid.txt -t $HEROKU_CONTAINER .
    - docker login --username=$HEROKU_USER --password=$HEROKU_API_KEY registry.heroku.com
    - docker push $HEROKU_CONTAINER
    - |-
      curl -X PATCH https://api.heroku.com/apps/uofi-book-exchange/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_API_KEY}" --data '{"updates": [ {"type": "web", "docker_image": "'$(cat imageid.txt)'" }]}'
  only:
    - master